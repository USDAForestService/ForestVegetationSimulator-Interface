
//start keyword_list

! The keyword is the PKey, the ATList is the abbreviation
! for the extension (see exten) and categories (see keycats),
! and the PString is the keyword description.
! (The extension is the first item in the ATList).

AddFile   {base io}:
{Permits addition of a file containing keywords.}

ATRTList  {base io}:
{Prints a list of tree records representing stand conditions after a 
scheduled treatment to an output treelist file}

BAIMult   {base modifier}:
{Multiplier to change the large tree basal area increment prediction.}

BAMax     {base modifier}:
{Modifies maximum density for the stand and the mortality distribution pattern.}

BFDefect  {base vol}:
{Specifies species specific board foot volume defect corrections for board foot 
volume estimates.}

BFFDLN     {base vol}:
{Enters species specific parameters for log-linear form and defect correction for 
board foot volume estimates.}

BFVolEqu  {base vol modifier}:
{Adjusts the board foot volume equations.}

BFVolume  {base vol modifier}:
{Changes the merchantability limits for board foot volume equations.}

CalbStat  {base io}:
{Specify the minimum number of observations required for calibration.}

CCAdj  {base modifier silv}:
{Adjusts the percent canopy cover (%CC) overlap assumption for clumpy or 
uniform stands. Can be used with THINCC to change the %CC target calculation.}

Close     {base io}:
{Closes a file.}

CFVolEqu  {base vol modifier}:
{Adjusts the cubic foot volume equations.}

CHEAPO    {base io}:
{Generates an output file for the CHEAPO economic analysis program.}

Comment   {base io stdtre}:
{Comment will be reproduced in the Options Selected by Input table.}

Compress  {base control}:
{Reduces the number of tree records.}

Compute   {base io}:
{Defines a user specified variable used by the Event Monitor.}

CrnMult   {base modifier silv}:
{Alters the change in crown by a specified proportion, or in the case of dubbing 
adjusts the dubbed crown by the specified proportion.}

CutEff    {base thin silv}:
{Changes the cutting efficiency for all thinnings.}

CutList   {base io thin}:
{Print a list of all harvested tree records or place a copy in a retrievable 
mass storage file.}

CWEqn     {base modifier}:
{Sets species specific parameters for crown width equations}

CycleAt   {base control}:
{Insures a cycle boundary exists at specified year.}

DataScrn  {base control io}:
{Screens data based on specified diameter limits.}

Debug     {base control io}:
{Requests printing of program calculations as they occur.}

Defect    {base vol}:
{Specifies species specific defect corrections volume estimates.}

Design    {base stdtre inventory}:
{Specify information about the sampling design used to collect tree data.}

DgStDev   {base modifier}:
{Change the limits of the normal distribution from which random errors are 
drawn for diameter increment predictions.}

Echo      {base control}:
{Echo keywords to the Options Selected by Input in the Main Output file.}

Fertiliz  {base silv}:
{Simulate the application of fertilizer.}

FIAVBC   {base control}:
{Activates FIA volume computation methodology}

FixCW     {base modifier}:
{Overrides crown width estimates for specified diameter classes and species.}

FixDG     {base modifier}:
{Overrides diameter growth rates for specified diameter classes and species.}

FixHtG    {base modifier}:
{Overrides height growth rates for specified diameter classes and species.}

FixMort   {base modifier}:
{Overrides mortality rates for specified diameter classes and species.}

FvsStand  {base io}:
{Creates support output file for the post processor FVSSTAND Alone.}

Growth    {base stdtre inventory}:
{Methods used to measure and input mortality, height, and diameter growth
data.}

HtgMult   {base modifier}:
{Growth multiplier for the large tree height growth model.}

HtgStop   {base modifier thin}:
{Stop the height growth to reflect temporary damage.}

InvYear   {base stdtre inventory}:
{Specify the starting date for a projection.}

Locate   {base inventory stdtre}:
{Specify coordinates where the stand is located.}

Managed   {base modifier inventory}:
{Signals hat the stand is managed or unmanaged.  Applies to a few variants.}

MCDefect  {base vol}:
{Species-specific cubic foot volume defect corrections for volume estimates.}

MCFDLN    {base vol}:
{Species-specific parameters for log-linear form and defect correction equations
for merchantable cubic foot volume estimates.}

MgmtId    {base stdtre silv}:
{4-character alphanumeric code identifying the projected silvicultural treatment.}

MinHarv   {base thin vol}:
{Specify minimum acceptable harvest standards for board foot volume, 
merchantable cubic foot volume, or basal area per acre by cycle.}

ModType   {base inventory}:
{Used to set forest type in all variants and to set model type in the Central Rockies 
variant.}

MortMSB  {base modifier}:
{Mortality associated with a Mature Stand Boundary}

MortMult  {base modifier}:
{Multiplier used to alter mortality distribution.}

NoAutoES  {base control regen}:
{Suppresses all natural regeneration and ingrowth features.}

NoCalib   {base modifier inventory}:
{Suppress calculation of scale factors for large tree diameter increment model 
and small tree height increment model.}

NoEcho    {base control}:
{Suppresses keyword echo to the Options Selected by Input in the Main Output file.}

NoHtDReg  {base modifier inventory}:
{Suppress the calculation of parameters for a local height-diameter equation for 
use in dubbing the heights of trees which have missing recorded heights.}

NoScreen {base io}:
{Suppress printing of the summary output table to the terminal during program
execution.}

NoTrees   {base control io}:
{Specifies that no projectable tree records will be used as input.}

NoTriple  {base control}:
{Change the number of times a tree record will be tripled during the first two
cycles.}

NumCycle  {base control}:
{Specify the number of cycles to run the projection.}

NumTrip   {base control}:
{Change the number of times tree records will be tripled.}

Open {base io}:
{Request for an input or output file. A supplement record is required to specify a 
filename for the unit that is to be opened.}

PointGrp   {base thin silv stdtre}:
{Defines a group of points referenced by a single name or number.}

PointRef  {base thin silv}:
{Specifies whether the point number entered on a keyword or Event Monitor function, 
refers to the inventory point number or FVS sequential point number.}

PrmFrost   {base modifier}:
{Include/exclude a growth modifier based on the presence of permafrost in the stand.}

Prune {base thin silv}:
{Schedule pruning to remove of a portion of tree crowns.}

RANNSeed  {base control}:
{Reseeds pseudorandom number generators.}

ReadCorD  {base modifier}:
{Multiplier for large tree diameter growth model; model adjusted prior to
calibration.}

ReadCorH  {base modifier}:
{Multiplier for large tree height growth model, model adjusted prior to calibration.}

ReadCorR  {base modifier}:
{Multiplier for small tree height growth model, model adjusted prior to
calibration.}

RegDMult  {base modifier}:
{Multiplier for the small tree diameter growth model.}

RegHMult  {base modifier}:
{A growth multiplier for the small tree height model.}

ResetAge  {base control silv}:
{Resets the stand age to make output correspond to the age of the stand.}

Screen    {base io}:
{Allows printing of the summary output table to the terminal during program 
execution.}

SDICalc    {base modifier stdtre}:
{Modifies the SDI calculation}

SDIMax    {base modifier stdtre}:
{Specify maximum stand density index by species.}

SerlCorr    {base modifier}:
{Specify diameter growth autocorrelation coefficients.}

SetPThin    {base thin silv}:
{Set the point thinning parameters.}

SetSite   {base modifier inventory}:
{Allows user to change habitat type, plant association 
ecological unit and/or site index over the projection period.}

SiteCode  {base stdtre inventory}:
{Enter species specific site index value.}

SpCodes   {base stdtre inventory}:
{Identify species codes used on the input tree records.}

SpGroup   {base stdtre}:
{Defines a group of species referenced by a single name.}

SpLeave   {base thin silv}:
{Defines species to leave in a harvest}

SpecPref  {base thin silv}:
{Change the species preference for removal.}

StrClass  {base control io}:
{Calculates structural class values and defines related Event Monitor 
structural class variables.}

StandCN     {base io}:
{Enter stand_CN}

Stats     {base control io}:
{Optional table showing a statistical description of the input data for a 
projection.}

StdIdent  {base stdtre io}:
{Specify a stand identification code and descriptive title to label output tables.}

StdInfo   {base inventory stdtre}:
{Describes the site characteristics where the stand is located.}

TCondMLT  {base thin silv}:
{Change the impact of tree value class on the determination of removal priority.}

TFixArea   {base inventory stdtre}:
{Specify the total area of small-tree fixed plots.}

ThinABA   {base thin silv}:
{Schedule thinning from above to a basal area per acre target.}

ThinATA   {base thin silv}:
{Schedule thinning from above to a trees-per-acre target.}

ThinAuto  {base thin silv}:
{Schedule automatic stocking control.}

ThinBBA   {base thin silv}:
{Schedule thinning from below to a basal area per acre target.}

ThinBTA   {base thin silv}:
{Schedule thinning from below to a trees-per-acre target.}

ThinCC    {base thin silv}:
{Schedule a thinning with a residual canopy cover target.}

ThinDBH   {base thin silv}:
{Schedule the removal of a segment of the DBH distribution.}

ThinHt    {base thin silv}:
{Schedule the removal of a segment of the height distribution.}

ThinMist   {base thin silv}:
{Schedule the removal of trees with Dwarf Mistletoe Rating}

ThinPRSC  {base thin silv}:
{Schedule prescription thinning, harvesting trees that were marked for removal 
on the input tree records.}

ThinPt  {base thin silv}:
{Schedule a thinning by point or plot number}

ThinQFA  {base thin silv}:
{Schedule a thinning based on a Q-Factor Approach}

ThinRDen   {base thin silv}:
{Schedule a thinning with a residual Curtis' Relative Density target.}

ThinRDSL   {base thin silv}:
{Schedule a thinning with a residual Relative Density (SILVAH) target.}

ThinSDI   {base thin silv}:
{Schedule a thinning with a residual stand density index target.}

TimeInt   {base control}:
{Specify the length, in years, of any or all projection cycles.  It is best to let 
FVS set the cycle lengths.}

TopKill   {base modifier thin}:
{Kill a portion of the top of a tree to reflect damage from logging or insects.}

TreeData  {base stdtre io}:
{Specifies a logical unit for reading in tree data records.}

TreeFmt {base stdtre}:
{Fortran format statement describing the layout of the tree data record.}

TreeList  {base io}:
{Prints all sample tree records or place a copy in a retrievable mass storage
file.}

TreeSzCp  {base modifier}:
{Sets limits for maximum tree diameter and height for a given species, and specifies 
a minimum mortality rate when tree diameter exceeds the specified limit.}

VolEqNum   {base vol modifier}:
{Changes the Volume Equation number used to calculate volume}

Volume    {base vol modifier}:
{Redefine merchantability limits for the merchantable cubic foot volume 
equation.}

YardLoss   {base silv thin}:
{Allows user to designate a portion of a harvest to be left in the woods.}


! ---------------------------------------
! cover keywords
! ---------------------------------------

Canopy    {cover control canopy}:
{Requests crown cover options.}

Cover          {cover control}:
{Signifies beginning of keywords for the extension.}

NoCovOut  {cover io control canopy}:
{Suppress output of Canopy Cover Statistics display.}

NoShbOut  {cover io control understory}:
{Suppress output of the Shrub Statistics display.}

NoSumOut  {cover io control}:
{Suppress output of the Canopy and Shrubs Summary display.}

ShowShrb     {cover control understory}:
{Selects up to 6 understory species for which output will be displayed.}

ShrbLayr     {cover calib understory}:
{Provides field data with which to calibrate shrub predictions.}

ShrubHt {cover calib understory}:
{Supply calibration information where height in feet measurements have been 
gathered for individual species.}

ShrubPC {cover calib understory}:
{Supply calibration information where percent cover measurements have been 
gathered for individual species.}

Shrubs    {cover control understory}:
{Requests shrub statistics.}


! ---------------------------------------
! mistoe keywords
! ---------------------------------------


MisTable  {mist io}:
{Produce detailed species/DBH class tables.}

MistGMod  {mist modifier}:
{Alter existing effects on diameter growth.}

MistHMod  {mist modifier}:
{Alter existing effects on height growth.}

MistMort  {mist modifier}:
{Alter percentage of mortality due to Dwarf Mistletoe.}

MistMult  {mist modifier}:
{Alter spread and intensification probabilities.}

MistOff   {mist modifier}:
{Ignore all effects of Dwarf Mistletoe.}

MistPInf  {mist inventory}:
{Automatically introduce infections.}

MistPref  {mist silv thin}:
{Alter cutting preference of infected trees.}

MistPrt   {mist io}:
{Produce species, stand average, and DBH summary tables.}

! ---------------------------------------
! climate-fvs keywords
! ---------------------------------------


ClimData  {climate}:
{Signifies that the climate and species-viability data be read from an external file 
and specifies which Global Circulation Model/Scenario desired.}

ClimRept  {climate}:
{Generates the Climate-FVS output report.}

AutoEstb  {climate}:
{Signal that Climate-FVS automatic establishment logic is turned on and that the 
base FVS automatic establishment features are turned off.}

GrowMult  {climate}:
{Adjust the growth-rate multiplier computed by Climate-FVS.}

MortMult  {climate}:
{Specify two species-specific FVS-Climate mortality multipliers.}

MxDenMlt  {climate}:
{Adjust the maximum density multiplier computed by Climate-FVS.}

SetAttr   {climate}:
{Changes the values for a single attribute from those in the climate attribute file.}

! ---------------------------------------
! estb and strp keywords
! ---------------------------------------


AuTally   {estb modifier control inventory}:
{Generates automatic tallies following thinnings.}

BudWorm   {estb stdtre silv regen}:
{Input defoliation histories for western spruce budworm and simulate the effects 
of budworm defoliation on regeneration success.}

BurnPrep  {estb strp silv inventory}:
{Enter the percentage of plots receiving a site preparation by burning.}

Estab          {estb strp control}:
{Enters the year of disturbance and signal that keywords following are for the 
Regeneration Establishment extension.}

EZCruise  {estb strp silv inventory}:
{Predict the small tree component at the time of the inventory if the inventory 
data does not include small trees.}

HabGroup  {estb io silv stdtre regen}:
{Prints a table showing habitat types by habitat type group.}

HtAdj          {estb strp modifier io stdtre regen}:
{Enter a species specific initial height modifier for newly established trees before 
the tree records are passed to the FVS model.}

Ingrow    {estb stdtre regen}:
{Toggles on the simulation of ingrowth.}

MechPrep  {estb strp silv inventory}:
{Enter the percentage of regeneration plots receiving a site preparation by 
mechanical scarification.}

MinPlots  {estb strp inventory}:
{Enter the minimum number of plots to process.}

Natural   {estb strp silv regen stdtre}:
{Specify natural regeneration that will be added to the stand.}

NoAuTaly  {estb control inventory}:
{Prevent automatic tallies following thinnings.}

NoInGrow  {estb modifier stdtre regen}:
{Prevent the simulation of ingrowth.}

NoSprout  {estb strp modifier stdtre regen}:
{Prevent the simulation of sprouting.}

Output    {estb strp io control}:
{Control the kind of printed output described for this extension.}

PassAll   {estb io modifier control}:
{Specifies the number of "acceptable" predicted seedlings to be passed from the 
regeneration model to the FVS tree list during the tally.}

Plant          {estb strp silv regen}:
{Specify that planting is to be simulated}

PlotInfo  {estb strp inventory stdtre silv}:
{Specify plot specific values for slope, aspect, habitat type, topographic position, 
and site preparation.}

ESRanSd  {estb strp modifier}:
{Reseed the pseudorandom number generator.}

ResetAge  {estb strp control silv}:
{Resets the stand age to make output correspond to the age of the stand.}

SpecMult  {estb modifier stdtre regen}:
{Enter a species specific multiplier that adjusts the probability of a species' 
occurrence in natural regeneration.}

Sprout    {estb strp stdtre regen}:
{Turn on/or change the simulation of sprouting}

StockAdj  {estb modifier inventory regen}:
{Enter a multiplier to adjust the probability of natural regeneration stocking for 
individual plots.}

Tally          {estb strp control silv inventory}:
{Schedule a tally sequence.}

TallyOne  {estb strp inventory}:
{Schedule the first regeneration tally in a specific year.}

TallyTwo  {estb strp inventory}:
{Schedule the second regeneration tally at any time after the first tally and up to 
20 years after a disturbance.}

Thrshold  {estb modifier inventory}:
{Change the threshold values scheduling automatic regeneration tallies following
thinnings.}

! ---------------------------------------
! Armillaria root disease (Version 3)
! ---------------------------------------

BBClear  {armwrd3 otherAgent}:
{Deactivate the default bark beetle events.}

BBOut    {armwrd3 io}:
{Instruct the model to write a table of bark beetle output.}

BBType1  {armwrd3 otherAgent}:
{Include mountain or western pine beetles in the simulation.}

BBType2  {armwrd3 otherAgent}:
{Include Douglas-fir beetle in the simulation.}

BBType3  {armwrd3 otherAgent}:
{Include fir engraver in the simulation.}

BBType4  {armwrd3 otherAgent}:
{Include mountain pine beetle on ponderosa pine in the simulation.}

DNSCalc  {armwrd3 otherAgent}:
{Alter the method by which the outbreak stand density threshold 
is computed for bark beetle type 1.}

InfColo  {armwrd3 modifier}:
{Modify the proportion of root system which is colonized after death.}

InfKill  {armwrd3 modifier}:
{Modify the proportion of roots infected before tree death.}

InfMult  {armwrd3 modifier}:
{Modify the probability of root disease transmission.}

InfSims  {armwrd3 io modifier}:
{Change the number of times to simulate the inside-center infection 
dynamics.  Print results of inside-center simulation.}

InocLife {armwrd3 modifier}:
{Modify the default rate and patterns of decay of the inoculum in the 
infected roots of dead stumps and trees.}

InocSpan {armwrd3 modifier}:
{Specify the minimum life span of inoculum.}

PlotInf  {armwrd3 inventory}:
{Identify plots which are inside root disease centers.}

PlRead   {armwrd3 inventory}:
{Specify which subplots within the stand contain root disease.}

PStump   {armwrd3 mgmt}:
{Simulate stump pushing.}

RRComp   {armwrd3 modifier}:
{Modify the maximum size of the tree list.}

RRDOut   {armwrd3 control io}:
{Instruct the model to write a detailed root disease output table to the 
main output file.}

RREcho   {armwrd3 control io}:
{Instruct the model to write the disease summary table
to a seperate file.}

RRInit   {armwrd3 inventory}:
{Specify the number, size, and distribution of disease centers.}

RRJump   {armwrd3 modifier}:
{Specify the extent to which centers expand through uninfected trees 
when the stand is thinned or clearcut.}

RRMinK   {armwrd3 modifier}:
{Specify years-to-death below which the TTDMult keyword does not 
influence mortality.}

RRTreIn  {armwrd3 inventory}:
{Indicate that disease conditions are initialize from tree data.}

RSeed    {armwrd3 modifier}:
{Set the random number generator seed value.}

SArea    {armwrd3 inventory}:
{Specify the stand area to be simulated.}

SDIRMult {armwrd3 modifier}:
{Modify the calculation of root radius based on SDI.}

SMCOut   {armwrd3 io}:
{Instruct the model to write a table of root disease center spread 
rates from the Monte Carlo Simulation to a seperate file.}

Spread   {armwrd3 modifier}:
{Set the type of spread model to be used in the simulation.}

STRead   {armwrd3 inventory}:
{Set initial stump list in the diseased portion of the stand.}

TDistn   {armwrd3 modifier}:
{Specify the type of spatial distribution of trees in disease centers.}

TimeDead {armwrd3 inventory}:
{Change the time since death for dead infected trees and stumps in the 
inventory.}

TTDMult  {armwrd3 modifier}:
{Modify years-to-death values.}

WindThr  {armwrd3 otherAgent}:
{Include windthrow events in the simulation.}


! ---------------------------------------
! Phellinus root disease (Version 3)
! ---------------------------------------

BBClear  {phewrd3 otherAgent}:
{Deactivate the default bark beetle events.}

BBOut    {phewrd3 io}:
{Instruct the model to write a table of bark beetle output.}

BBType1  {phewrd3 otherAgent}:
{Include mountain or western pine beetles in the simulation.}

BBType2  {phewrd3 otherAgent}:
{Include Douglas-fir beetle in the simulation.}

BBType3  {phewrd3 otherAgent}:
{Include fir engraver in the simulation.}

BBType4  {phewrd3 otherAgent}:
{Include mountain pine beetle on ponderosa pine in the simulation.}

DNSCalc  {phewrd3 otherAgent}:
{Alter the method by which the outbreak stand density threshold 
is computed for bark beetle type 1.}

InfColo  {phewrd3 modifier}:
{Modify the proportion of root system which is colonized after death.}

InfKill  {phewrd3 modifier}:
{Modify the proportion of roots infected before tree death.}

InfMult  {phewrd3 modifier}:
{Modify the probability of root disease transmission.}

InfSims  {phewrd3 io modifier}:
{Change the number of times to simulate the inside-center infection 
dynamics.  Print results of inside-center simulation.}

InocLife {phewrd3 modifier}:
{Modify the default rate and patterns of decay of the inoculum in the 
infected roots of dead stumps and trees.}

InocSpan {phewrd3 modifier}:
{Specify the minimum life span of inoculum.}

PlotInf  {phewrd3 inventory}:
{Identify plots which are inside root disease centers.}

PlRead   {phewrd3 inventory}:
{Specify which subplots within the stand contain root disease.}

PStump   {phewrd3 mgmt}:
{Simulate stump pushing.}

RRComp   {phewrd3 modifier}:
{Modify the maximum size of the tree list.}

RRDOut   {phewrd3 control io}:
{Instruct the model to write a detailed root disease output table to the 
main output file.}

RREcho   {phewrd3 control io}:
{Instruct the model to write the disease summary table
to a seperate file.}

RRInit   {phewrd3 inventory}:
{Specify the number, size, and distribution of disease centers.}

RRJump   {phewrd3 modifier}:
{Specify the extent to which centers expand through uninfected trees 
when the stand is thinned or clearcut.}

RRMinK   {phewrd3 modifier}:
{Specify years-to-death below which the TTDMult keyword does not 
influence mortality.}

RRTreIn  {phewrd3 inventory}:
{Indicate that disease conditions are initialize from tree data.}

RSeed    {phewrd3 modifier}:
{Set the random number generator seed value.}

SArea    {phewrd3 inventory}:
{Specify the stand area to be simulated.}

SDIRMult {phewrd3 modifier}:
{Modify the calculation of root radius based on SDI.}

SMCOut   {phewrd3 io}:
{Instruct the model to write a table of root disease center spread 
rates from the Monte Carlo Simulation to a seperate file.}

Spread   {phewrd3 modifier}:
{Set the type of spread model to be used in the simulation.}

STRead   {phewrd3 inventory}:
{Set initial stump list in the diseased portion of the stand.}

TDistn   {phewrd3 modifier}:
{Specify the type of spatial distribution of trees in disease centers.}

TimeDead {phewrd3 inventory}:
{Change the time since death for dead infected trees and stumps in the 
inventory.}

TTDMult  {phewrd3 modifier}:
{Modify years-to-death values.}

WindThr  {phewrd3 otherAgent}:
{Include windthrow events in the simulation.}

! ---------------------------------------
! Annosus root disease (Version 3)
! ---------------------------------------

BBClear  {ardwrd3 otherAgent}:
{Deactivate the default bark beetle events.}

BBOut    {ardwrd3 io}:
{Instruct the model to write a table of bark beetle output.}

BBType1  {ardwrd3 otherAgent}:
{Include mountain or western pine beetles in the simulation.}

BBType2  {ardwrd3 otherAgent}:
{Include Douglas-fir beetle in the simulation.}

BBType3  {ardwrd3 otherAgent}:
{Include fir engraver in the simulation.}

BBType4  {ardwrd3 otherAgent}:
{Include mountain pine beetle on ponderosa pine in the simulation.}

Borate   {ardwrd3 mgmt}:
{Simulate the application of borax to stumps (to prevent the 
colonization by spores) after each harvest.}

DNSCalc  {ardwrd3 otherAgent}:
{Alter the method by which the outbreak stand density threshold 
is computed for bark beetle type 1.}

InfColo  {ardwrd3 modifier}:
{Modify the proportion of root system which is colonized after death.}

InfKill  {ardwrd3 modifier}:
{Modify the proportion of roots infected before tree death.}

InfMult  {ardwrd3 modifier}:
{Modify the probability of root disease transmission.}

InfSims  {ardwrd3 io modifier}:
{Change the number of times to simulate the inside-center infection 
dynamics.  Print results of inside-center simulation.}

InocLife {ardwrd3 modifier}:
{Modify the default rate and patterns of decay of the inoculum in the 
infected roots of dead stumps and trees.}

InocSpan {ardwrd3 modifier}:
{Specify the minimum life span of inoculum.}

PlotInf  {ardwrd3 inventory}:
{Identify plots which are inside Annosus root disease centers.}

PlRead   {ardwrd3 inventory}:
{Specify which subplots within the stand contain root disease.}

PStump   {ardwrd3 mgmt}:
{Simulate stump pushing.}

RRComp   {ardwrd3 modifier}:
{Modify the maximum size of the tree list.}

RRDOut   {ardwrd3 control io}:
{Instruct the model to write a detailed root disease output table to the 
main output file.}

RREcho   {ardwrd3 control io}:
{Instruct the model to write the disease summary table 
to a seperate file.}

RRHosts  {ardwrd3 modifier}:
{Change the disease type that a tree species can be host to.}

RRInit   {ardwrd3 inventory}:
{Specify the number, size, and distribution of disease centers.}

RRJump   {ardwrd3 modifier}:
{Specify the extent to which centers expand through uninfected trees 
when the stand is thinned or clearcut.}

RRMinK   {ardwrd3 modifier}:
{Specify years-to-death below which the TTDMult keyword does not 
influence mortality.}

RRTreIn  {ardwrd3 inventory}:
{Indicate that disease conditions are initialize from tree data.}

RRType   {ardwrd3 inventory}:
{Specify the type of root disease to simulate.}

RSeed    {ardwrd3 modifier}:
{Set the random number generator seed value.}

SArea    {ardwrd3 inventory}:
{Specify the stand area to be simulated.}

SDIRMult {ardwrd3 modifier}:
{Modify the calculation of root radius based on SDI.}

SMCOut   {ardwrd3 io}:
{Instruct the model to write a table of root disease center spread 
rates from the Monte Carlo Simulation to a seperate file.}

Spore    {ardwrd3 modifier}:
{Change the spore infection parameters for the simulation of spore dynamics.}

Spread   {ardwrd3 modifier}:
{Set the type of spread model to be used in the simulation.}

STRead   {ardwrd3 inventory}:
{Set initial stump list in the diseased portion of the stand.}

TDistn   {ardwrd3 modifier}:
{Specify the type of spatial distribution of trees in disease centers.}

TimeDead {ardwrd3 inventory}:
{Change the time since death for dead infected trees and stumps in the
inventory.}

TTDMult  {ardwrd3 modifier}:
{Modify years-to-death values.}

WindThr  {ardwrd3 otherAgent}:
{Include windthrow events in the simulation.}


! ---------------------------------------
! Fire and Fuels Extension
! ---------------------------------------

BurnRept {fire io}:
{Request a report of the burning conditions when a fire occurs.}

CanCalc {fire modifier}:
{Modify the calculation of canopy base height and canopy bulk density.}

CanFProf {fire io}:
{Requests the FVS_CanProfile table be created and populated.}

CarbCalc {fire modifier}:
{Set the carbon accounting parameters.}

CarbCut {fire io}:
{Request the harvested products carbon report.}

CarbRept {fire io}:
{Request the stand carbon report.}

DeFulMod {fire modifier}:
{Modify an existing fuel model or define the a new one.}

Drought  {fire modifier}:
{Set the years that the fuel model selection process assumes
there is a drought.}

DuffProd {fire modifier}:
{Set the proportion of decayed material that goes into the duff pool.}

DWDCvOut  {fire io}:
{Request the down wood cover report.}

DWDVlOut  {fire io}:
{Request the down wood volume report.}

FireCalc {fire control modifier}:
{Adjust the fuel model selection logic used or select the option of using 
modelled fuel loads directly to predict fire behavior.}

FlameAdj {fire control modifier}:
{Modify or set the flame length for a fire simulated using the 
SIMFIRE keyword scheduled for the same year.}

FModList {fire control modifier}:
{Adjust the fuel models available for selection in conjuction with the new 
fuel model logic (see FireCalc keyword).}

FMortMlt {fire modifier}:
{Modify the FFE calculation of the probability of tree mortality.}

FuelDcay {fire modifier}:
{Set the total decay rates for each fuel size class and decay pool.}

FuelFoto {fire inventory modifier}:
{Set the initial fuel loadings by selecting a fuels photo series photo.}

FuelInit {fire inventory modifier}:
{Set the initial hard/sound fuel loads for each fuel size class, 
as well as litter and duff.}

FuelMove {fire mgmt modifier}:
{Move fuels from one size class to another (chipping), add, or remove fuels from stand.}

FuelModl {fire modifier}:
{Set the fuel models and weights used in place of the automatic fuel model selections.}

FuelMult {fire modifier}:
{Set multipliers of the fuel decay rates.}

FuelOut  {fire io}:
{Request a report of the fuels.}

FuelPool {fire modifier}:
{Set the decay rate (very slow, slow, medium, fast) for each tree species.}

FuelRept {fire io}:
{Request a fuel consumption and physical effects report be generated 
when a fire occurs.}

FuelSoft {fire inventory modifier}:
{Set the initial soft/rotten fuel loads for each fuel size class.}

FuelTret {fire mgmt modifier}:
{Set the fuel treatment (lopping, chopping, etc) and harvest type 
(skidding, high lead, etc) so as to modify the fuel depth.}

Moisture {fire modifier}:
{Set the fuel moisture conditions for each fuel category.}

MortClas {fire io modifier}:
{Set the lower bounds for the seven classes used in reporting 
fire-caused mortality.}

MortRept {fire io}:
{Request that a fire-caused tree mortality report be generated when a 
fire occurs.}

PileBurn {fire mgmt modifier}:
{Schedule a pile or jackpot burn and modify tree mortality rates 
resulting from this fuel treatment.}

PotFire {fire io}:
{Request that a report on potential fires under nominal burn 
conditions be generated.}

PotFMois {fire modifier}:
{Set the fuel moisture conditions for potential moderate and severe fires.}

PotFPAB {fire modifier}:
{Set the percentage of the stand area burned for potential moderate and severe fires.}

PotFSeas {fire modifier}:
{Set the time of year for potential moderate and severe fires.}

PotFTemp {fire modifier}:
{Set the temperature conditions for potential moderate and severe fires.}

PotFWind {fire modifier}:
{Set the wind speed for potential severe and moderate fires.}

Salvage  {fire mgmt}:
{Cause snags to be removed from the stand.}

SalvSP  {fire modifier}:
{Select a species to be cut or left in subsequent salvage operations.}

SimFire {fire control modifier}:
{Schedule a fire and set the conditions at the time of the burn.}

SnagBrk  {fire modifier}:
{Set the parameters for breaking (cause height loss) of standing snags.}

SnagClas {fire io modifier}:
{Set the dbh size class boundaries for the snag report (see SnagOut 
and SnagSum).}

SnagDCay {fire modifier}:
{Modify the snag decay rate parameters by tree species.}

SnagFall {fire modifier}:
{Modify the snag fall rate by tree species.}

SnagInit {fire inventory}:
{Add a snag record of a given species, size, height, age, and density 
to the snag list.}

SnagOut  {fire io}:
{Request a snag report be created.}

SnagPBN  {fire modifier}:
{Set the snag fall rates for snags that are present during a fire.}

SnagPSft {fire modifier}:
{Set the proportion of snags listed soft when trees die.}

SnagSum  {fire io}:
{Request a snag summary report be created.}

SoilHeat {fire io}:
{Request a report of the soil heating when a fire occurs.}

StatFuel {fire modifier}:
{Request that static fuel models be used in calculating fire intensity.}


! ---------------------------------------
! Database Extension
! ---------------------------------------

ATRTLiDB {dbs}:
{Requests the FVS_ATRTList table be created and populated.}

BurnReDB {dbs}:
{Requests the FVS_BurnReport table be created and populated.}

CalbStDB  {dbs}:
{Requests the FVS_CalbStat table be created and populated.}

CarbReDB {dbs}:
{Requests the FVS_Carbon and FVS_Hrv_Carbon tables be 
created and populated.}

ClimReDB {dbs}:
{Requests the FVS_Climate table be created and populated.}

ComputDB {dbs}:
{Requests the FVS_Compute table be created and populated.}

CutLiDB {dbs}:
{Requests the FVS_Cutlist table be created and populated.}

DWDCvDB {dbs}:
{Requests the FVS_Down_Wood_Cov table be created and populated.}

DWDVlDB {dbs}:
{Requests the FVS_Down_Wood_Vol table be created and populated.}

EconRpts {dbs}:
{Requests the ECON table(s) be written to the database.}

FuelReDB {dbs}:
{Requests the FVS_Consumption table be created and populated.}

FuelsOut {dbs}:
{Requests the FVS_Fuels table be created and populated.}

InvStats {dbs}:
{Requests the FVS_Stats_Stand and FVS_Stats_Species tables be 
created and populated.}

MisRpts {dbs}:
{Requests the FVS_DM_Spp_Sum, FVS_DM_Stnd_Sum, and FVS_DM_Sz_Sum 
dwarf mistletoe tables be created and populated.}

MortReDB {dbs}:
{Requests the FVS_Mortality table be created and populated.}

PotFirDB {dbs}:
{Requests the FVS_PotFire table be created and populated.}

RDBBMort {dbs}:
{Requests the FVS_RD_Beetle table be created and populated.}

RDDetail {dbs}:
{Requests the FVS_RD_Det table be created and populated.}

RDSum {dbs}:
{Requests the FVS_RD_Sum table be created and populated.}

RegRepts {dbs}:
{Requests regeneration establishment table(s) be created and populated.}

SnagOuDB {dbs}:
{Requests the FVS_SnagDet table be created and populated.}

SnagSuDB {dbs}:
{Requests the FVS_SnagSum table be created and populated.}

StandSQL {dbs}:
{Specify an SQL statement that from which stand-level 
FVS variables are initialized.}

SQLIn {dbs}:
{Requests that an SQL statement be run on the input 
database connection (DSNIN).}

SQLOut {dbs}:
{Requests that an SQL statement be run on the output 
database connection (DSNIN).}

StrClsDB {dbs}:
{Requests the FVS_StrClass table be created and populated.}

Summary {dbs}:
{Requests the FVS_Summary table be created and populated.}

TreeLiDB {dbs}:
{Requests the FVS_Treelist table be created and populated.}

TreeSQL {dbs}:
{Specify an SQL statement that from which tree-level 
FVS variables are initialized.}

VBCATRDB {dbs}:
{Requests the FVS_FIAVBC_AtrtList table be created and populated.}

VBCCUTDB {dbs}:
{Requests the FVS_FIAVBC_CutList table be created and populated.}

VBCSUMDB {dbs}:
{Requests the FVS_FIAVBC_Summary table be created and populated.}

VBCTRLDB {dbs}:
{Requests the FVS_FIAVBC_TreeList table be created and populated.}

! ---------------------------------------
! Economic analysis extension
! ---------------------------------------

AnnuCst  {econ}:
{Specifies per acre annually occurring fixed cost.}

AnnuRvn  {econ}:
{Specifies per acre annually occurring fixed revenue.}

BurnCst  {econ}:
{Specifies per acre burning site prep cost.}

HrvFxCst  {econ}:
{Specifies per acre commercial thinning or harvest cost.}

HrvVrCst  {econ}:
{Specifies commercial thinning or harvest cost by unit-of-measure and tree DBH.}

HrvRvn  {econ}:
{Specifies commercial thinning or harvest price by unit-of-measure by species 
by diameter-class.}

LbsCfv  {econ}:
{Specifies value for converting one harvested cubic foot of volume to pounds.}

MechCst  {econ}:
{Specifies per acre mechanical site prep cost.}

NoTable  {econ}:
{Specifies suppression of ECON output tables.}

PctFxCst  {econ}:
{Specifies per acre pre-commercial thinning cost.}

PctSpec  {econ}:
{Specifies removal parameters differentiating pre-commercial 
thinning from commercial thinning or harvest.}

PctVrCst  {econ}:
{Specifies pre-commercial thinning cost by unit-of-measure and tree DBH.}

PlantCst  {econ}:
{Specifies planting cost.}

Pretend  {econ}:
{Requests that economic benefits and costs be calculated 
for a hypothetical stand harvest.}

SpecCst  {econ}:
{Specifies a once per cycle cost.}

SpecRvn  {econ}:
{Specifies a once per cycle revenue.}

StrtEcon   {econ}:
{Specifies beginning or re-initiazation year for starting ECON calculations.}

! ---------------------------------------
! organon-fvs keywords
! ---------------------------------------

INPFile {organon}:
{Reads in the ORGANON *.inp file}

ORGInfo {organon}:
{Set ORGANON specific variables }

ORGVols {organon}:
{Sets the volume equations used}

OSUBFVOL {organon}:
{Sets OSU board foot volume equation specifications }

OSUCFVOL {organon}:
{Sets OSU cubic foot volume equation specifications } 

ORGOFF {organon}:
{Turns off the ORGANON growth and mortality }
//end keyword_list

